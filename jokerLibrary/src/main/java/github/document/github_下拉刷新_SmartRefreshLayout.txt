SmartRefreshLayout
下拉刷新、上拉加载、二级刷新、淘宝二楼、RefreshLayout、OverScroll，Android智能下拉刷新框架，
支持越界回弹、越界拖动，具有极强的扩展性，集成了几十种炫酷的Header和 Footer。
https://frescolib.org/
https://github.com/scwang90/SmartRefreshLayout



1、下载
    编辑 build.gradle 文件:
        dependencies {
          //1.1.0 API改动过大，老用户升级需谨慎
          compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-20'
          compile 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-20'//没有使用特殊Header，可以不加这行
          compile 'com.android.support:appcompat-v7:25.3.1'//版本 23以上（必须）
        }

2、使用
    ###在XML布局文件中添加 SmartRefreshLayout
    <?xml version="1.0" encoding="utf-8"?>
    <com.scwang.smartrefresh.layout.SmartRefreshLayout xmlns:android="http://schemas.android.com/apk/res/android"
        android:id="@+id/refreshLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent">
        <android.support.v7.widget.RecyclerView
            android:id="@+id/recyclerView"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:overScrollMode="never"
            android:background="#fff" />
    </com.scwang.smartrefresh.layout.SmartRefreshLayout>


    ###在 Activity 或者 Fragment 中添加代码
    RefreshLayout refreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout);
    refreshLayout.setOnRefreshListener(new OnRefreshListener() {
        @Override
        public void onRefresh(RefreshLayout refreshlayout) {
            refreshlayout.finishRefresh(2000/*,false*/);//传入false表示刷新失败
        }
    });
    refreshLayout.setOnLoadMoreListener(new OnLoadMoreListener() {
        @Override
        public void onLoadMore(RefreshLayout refreshlayout) {
            refreshlayout.finishLoadMore(2000/*,false*/);//传入false表示加载失败
        }
    });

3、使用指定的 Header 和 Footer
    查看Github
    //使用通用下拉类型...  显示时间 下拉刷新。。。的那种
    refreshLayout.setRefreshHeader(new ClassicsHeader(getActivity()).setEnableLastTime(true));